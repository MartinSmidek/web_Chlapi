#pragma switch,if
# Aplikace bez menu - pouze s hlavním panelem
# (c) 2016-2018 Martin Šmídek <martin@smidek.eu>

panel p [0,0,*,*] { type:'main', _sys:'$'
  var do_go=1
  var last='home'  //'home'
  var history: array, top=-1
  use f: form _f [0,0,,]
  use w: form _w [0,30,,]
//  proc onstart() { var gets:object
//    gets.set(function('return Ezer.get;'));
//    last.set(cconc(gets.page,gets.page,'home'));
//    // zapisuj každý klik hned
//    function('Ezer.sys.ezer.activity.touch_limit=1; return 1;');
//    go_menu(last.get);
//  }
  func onstart() { var gets:object
    gets= function('return Ezer.get;');
    last= cconc(gets.page,gets.page,'home');
    // zapisuj každý klik hned
    function('Ezer.sys.ezer.activity.touch_limit=1; return 1;');
    go_menu(last);
  }
//  proc opravit(_typ,_id,_idk) { 
//    eq('xclanek',_typ); EDITOR.Clanek(_id); refresh 
//  | eq('xakce',_typ); EDITOR.Akce(_id,_idk); refresh 
//  | eq('xkniha',_typ); EDITOR.Kniha(_id); refresh 
//  | eq('kalendar',_typ); EDITOR.Kalendar(_id); refresh 
//  | eq('xfotky',_typ); FOTKY.oprava(_id); refresh
//  }
  func opravit(_typ,_id,_idk) { 
    switch (_typ) {
      case 'xclanek': EDITOR.Clanek(_id); refresh(); break; 
      case 'xakce':   EDITOR.Akce(_id,_idk); refresh(); break;
      case 'xkniha':  EDITOR.Kniha(_id); refresh(); break;
      case 'kalendar':EDITOR.Kalendar(_id); refresh(); break;
      case 'xfotky':  FOTKY.oprava(_id); refresh(); break;
      case 'xucasti': TABLE.oprava(_id); refresh(); break;
    }
  }
//  proc zmenit(_mid,_typ1,_id,_typ2) { 
//    ask('menu_chng_elem',_mid,_typ1,_id,_typ2); refresh
//  }
  func zmenit(_mid,_typ1,_id,_typ2) { 
    php.menu_chng_elem(_mid,_typ1,_id,_typ2); refresh()
  }
//  proc pridat(_typ,_mid,_first) { var me:number
//    me.set(sys('user','id_user'));
//    eq('xclanek',_typ); ask('menu_add_elem',_mid,_typ,_first,me); refresh 
//  | eq('xkniha',_typ); ask('menu_add_elem',_mid,_typ,_first,me); refresh 
//  | eq('xkniha.elem',_typ); ask('menu_add_elem',_mid,_typ,_first,me); refresh 
//  | eq('xfotky',_typ); FOTKY.novy(_mid); refresh 
//  | eq('xakce',_typ); ask('menu_add_elem',_mid,_typ,0,me); refresh 
//  }
  func pridat(_typ,_mid,_first) { var me:number
    me= sys('user','id_user');
    switch (_typ) {
      case 'xclanek': php.menu_add_elem(_mid,_typ,_first,me); refresh(); break;
      case 'xkniha': php.menu_add_elem(_mid,_typ,_first,me); refresh(); break; 
      case 'xkniha.elem': php.menu_add_elem(_mid,_typ,_first,me); refresh(); break;
      case 'xfotky': FOTKY.novy(_mid); refresh(); break;
      case 'xakce': php.menu_add_elem(_mid,_typ,0,me); refresh(); break;
      case 'pozvanka': php.menu_add_elem(_mid,_typ,0,me); refresh(); break;
      case 'xucasti': TABLE.novy(_mid); refresh(); break;
    }
  }
//  proc zcizit(_typ,_pid,_mid) { 
//    eq(_typ,'fotky'); [ ask('menu_copy_foto',_pid,_mid); refresh ]  // _mid je zde test
//  | eq(substr(_typ,0,1),'?'); ask('menu_copy_elem',substr(_typ,1),_pid,_mid,1) 
//  | not(eq(substr(_typ,0,1),'?')); ask('menu_copy_elem',_typ,_pid,_mid,0); refresh
//  }
  func zcizit(_typ,_pid,_mid) { 
    if (_typ=='fotky') {
      php.menu_copy_foto(_pid,_mid); // _mid je zde test
      refresh() 
    }
    elseif ( substr(_typ,0,1)=='?' ) 
      php.menu_copy_elem(substr(_typ,1),_pid,_mid,1) 
    else {
      php.menu_copy_elem(_typ,_pid,_mid,0); 
      refresh()
    }
  }
//  proc posunout(_typ,_mid,_id,_dolu) { 
//    ask('menu_shift_elem',_typ,_mid,_id,_dolu); refresh
//  }
  func posunout(_typ,_mid,_id,_dolu) { 
    php.menu_shift_elem(_typ,_mid,_id,_dolu); refresh()
  }
//  proc cmd_fotky(_fid,_name,_cmd) { var ok:number // cmd=delete|attach
//    ok.set(ask('cmd_fotky',_fid,_name,_cmd)); 
//    ok; FOTKY.refresh
//  | alert("operace ",_cmd," pro ",_name," selhala")
//  }
  func cmd_fotky(_fid,_name,_cmd) { // cmd=delete|attach
    if ( php.cmd_fotky(_fid,_name,_cmd) ) 
      FOTKY.refresh();
    else 
      alert("operace ",_cmd," pro ",_name," selhala")
  }
//  proc namiru(_id,_div_id) { var _list:array, _y:object
//    _list.set(function('div',"return namiru_fotky(div);",_div_id));
//    _y.set(ask('namiru_fotky',_id,_list,0)); 
//    { _y.n; [ 
//      confirm(_y.msg);
//      ask('namiru_fotky',_id,_list,1); refresh ]
//    | alert(_y.msg)
//    }
//  }
  func namiru(_id,_div_id) { var _list:array, _y:object
    _list= function('div',"return namiru_fotky(div);",_div_id);
    _y= php.namiru_fotky(_id,_list,0); 
    if ( _y.n ) { 
      if ( confirm(_y.msg) ) {
        php.namiru_fotky(_id,_list,1); 
        refresh()
      }
      else 
        alert(_y.msg)
    }
  }
//  proc bez_embeded(_id) { var _list:array, _y:object
//    _y.set(ask('bez_embeded',_id,0)); 
//    { _y.n; [ 
//      confirm(_y.msg);
//      ask('bez_embeded',_id,1); refresh ]
//    | alert(_y.msg)
//    }
//  }
  func bez_embeded(_id) { var _y:object
    _y= php.bez_embeded(_id,0); 
    if ( _y.n ) {
      if ( confirm(_y.msg) ) {
        php.bez_embeded(_id,1); 
        refresh()
      }
      else 
        alert(_y.msg)
    }
  }
# ----------------------------------------------------------------------------==> emulace událostí
  var page: object // {html,edit,id}
//  proc cms_go(ref) { echo("přepnutí webu na ",ref); do_go.get; go(ref) }
  func cms_go(ref) { echo("přepnutí webu na ",ref); if ( do_go ) go(ref) }
//  proc cms_menu(ref) { clear; echo("přepnutí dle menu ",ref); do_go.get; go_menu(ref) }
  func cms_menu(ref) { clear(); echo("přepnutí dle menu ",ref); if ( do_go ) go_menu(ref) }
//  proc refresh() { cms_go(last.get); }
  func refresh() { cms_go(last) }
//  proc ask_page(a,b) {
//    page.set(ask('page',a,b));
//    w.page.set(page.get('html'));
////    f.editace.Init(page.get('edit'));
//  }
  func ask_page(a,b) {
    page= php.page(a,b);
    w.page= page.html;
  }
//  proc go(ref) { 
//    echo('go ',ref);
//    history.set(last.get);
//    last.set(ref);
//    f.verze.set(sys('ezer','version')); 
//    ask_page(function("return Ezer.app_root;"),ref);
//    function("return jump_fokus();");
//  }
  func go(ref) { 
    echo('go ',ref);
    history= last;
    last= ref;
    f.verze= sys('ezer','version'); 
    ask_page(function("return Ezer.app_root;"),ref);
    function("return jump_fokus();");
  }
//  proc cms_go_case(pid) { var y:object, ref:text
//    [ has_skill('a'); f.clr.get; clear ];
//    y.set(ask('pid2menu',pid));
//    f.verze.set(sys('ezer','version')); 
//    ask_page(function('mref',"history_push2(mref);return Ezer.app_root;",y.url),y.page);
//    function("return jump_fokus();");
//  }
  func cms_go_case(pid) { var y:object, ref:text
    if ( has_skill('a') && f.clr ) clear();
    y= php.pid2menu(pid);
    f.verze= sys('ezer','version'); 
    ask_page(function('mref',"history_push2(mref);return Ezer.app_root;",y.url),y.page);
    js.jump_fokus();
  }
//  proc go_menu(ref) { echo('go_menu ',ref);
//    history.set(last.get);
//    last.set(ref);
//    f.verze.set(sys('ezer','version')); 
//    ask_page(function("return Ezer.app_root;"),ref);
//  }
  func go_menu(ref) { echo('go_menu ',ref);
    history= last;
    last= ref;
    f.verze= sys('ezer','version'); 
    ask_page(function("return Ezer.app_root;"),ref);
  }
  # --------------------------------------------------------------------------==> stnd.funkce
  # on=1 => nastaví class=obligatory pro elementy s par.obligatory=1
  # on=0 => zruší ...
  # pokud je f proměnná (use), musí se použít f.get
//  proc form_obligatory(f,on) {
//    on;      foreach(f,form_obligatory_do)
//  | not(on); foreach(f,form_obligatory_od)
//  }
//  proc form_obligatory_do(e) {
//    eq(e.par); eq(e.par.obligatory,1);
//    e.set_css('obligatory');
//  }
//  proc form_obligatory_od(e) {
//    eq(e.par); eq(e.par.obligatory,1);
//    e.set_css('','obligatory');
//  }
  func form_obligatory(f,on) { var e:object
    for (e of f) {
      if ( e.par && (e.par.obligatory==1) ) {
        if ( on ) 
          e.set_css('obligatory');
//        else
//          e.set_css('','obligatory');
      }
    }
  }
  # vrátí počet nevyplněných povinných elementů tj. s par.obligatory=1
  var form_obligatory_n:number
  proc form_obligatory_test(f) {
    form_obligatory_n.set(0);
    foreach(f,form_obligatory_test_do);
    return(form_obligatory_n.get);
  }
  proc form_obligatory_test_do(e) {
    eq(e.par); eq(e.par.obligatory,1);
    [ e.get | form_obligatory_n.set(sum(form_obligatory_n.get,1)) ]
  }
# ----------------------------------------------------------------------------==> control bar
  form _f [,,*,30] { css:'grey admin', style:'z-index:9999;position:fixed'
    proc hide_all() { CMS.hide; ADMIN.hide; REDAKCE.hide; OPTIONS.hide }
    button [80,5,,]  { skill:'r|r', title:"[fa-chevron-left]"    
      proc onclick() { hide_all; go(history.get) } }
    button [101,5,,] { skill:'r|r', title:"[fa-repeat]"          
      proc onclick() { hide_all; cms_go(last.get) } }
    button [123,5,,] { skill:'r|r', title:"[fa-chevron-right]", format:'d'
      proc onclick() { hide_all } }
    button [200,5,,] { skill:'m|m', title:"TEST"
      proc onclick() { ask('TEST') } }
//    button editace [300,5,,] { 
//      proc Init(edt) {
//        eq('xclanek',edt); this.enable(1); this.set('[fa-edit] Editovat zobrazený článek')
//      | eq('kalendar',edt); this.enable(1); this.set('[fa-edit] Editovat kalendář')
//      | this.set('editace přes www.setkani.org'); this.enable(0)
//    }
//      proc onclick() { 
//        eq('xclanek',page.get('edit')); EDITOR.Clanek(page.get('id')); refresh 
//      | eq('kalendar',page.get('edit')); EDITOR.Kalendar(page.get('id')); refresh 
//    }}
    button [-95,5,,] { skill:'r|a', title:"[fa-gears] menu" 
      proc onclick() { hide_all; CMS.modal(10,40) } }
    label verze [-320,8,40,] { title:'ezer', style:'font-size:10pt;color:white' } 
    button [-238,5,,] { skill:'r|r', title:"[fa-empire] admin" 
      proc onclick() { hide_all; ADMIN.modal(10,40) } }
    button [-160,5,,] { skill:'r|a', title:"[fa-edit] redakce" 
      proc onclick() { hide_all; REDAKCE.modal(10,40) } }
    button [-10,5,,] { skill:'r|r', title:"[fa-bars]"           
      proc onclick() { hide_all; OPTIONS.modal(10,115) } }
  }
# ----------------------------------------------------------------------------==> page
  form _w [,,*,*] { style:"position:initial"
    label page { css:'cms_page' }
    label mapa { type:'map', css:'cms_mapa' }
  }
}
# ----------------------------------------------------------------------------==> MENU
panel CMS [0,0,610,400] { type:'popup',  title:'CMS - definice menu', 
    style:"min-width:590px", _sys:'cms'
    css:'dialog', par:°{min_top:30}
  var web=2, from_table= 1
  use a: area a_ 
  use u: form _u [210,0,,] 
  proc onfirstfocus() { 
    a.menu;
    a.curr_id.set('menu.main menu');
    a.select_curr;
  }
  area a_ { 
    title:"<div id='tree' style='width:206px;height:400px;overflow:auto'></div>"
    var curr_id:text, curr_data:object // index a data nastaveného node
    menu { type:'context'                                                                skill:'a|m'
      // ----------------------------- nový článek
      item { title:'nový článek tohoto menu' proc onclick() { 
        ask('menu_add_elem',u.mid.get,'xclanek'); a.menu
      }}
      item { title:'nová kniha tohoto menu' proc onclick() { 
        ask('menu_add_elem',u.mid.get,'xkniha'); a.menu
      }}
      // ----------------------------- posuny
      item { title:'-posuň menu dolů' proc onclick() { 
        ask('menu_shift',u.mid.get,1); a.menu
      }}
      item { title:'posuň menu nahoru' proc onclick() { 
        ask('menu_shift',u.mid.get,0); a.menu
      }}
      item { title:'-vlož podmenu' proc onclick() { var root:object, root_id:text, node:object
        root.set(curr_data.get); root_id.set(curr_id.get);
        echo('root ',curr_id.get,debug(curr_data.get));
        // vkládat lze buďto nové top|main menu nebo submenu pod uložený root (s definovaným mid)
        or(eq(curr_id.get,'menu.top menu','menu.main menu'),root.mid);
        node.set(a.tree_insert(curr_id.get));
        curr_id.set(node.id); 
        a.tree_select(curr_id.get);
        curr_data.set(object('wid',web.get,
            'mid',0,
            'mid_top',root.mid,
            'typ',cconc(eq(root_id,'menu.top menu'),0,eq(root_id,'menu.main menu'),1,2),
            'level',root.level
        ));
        a.tree_update(curr_id.get,0,curr_data.get);
        copy_by_name(curr_data.get,u);
        echo('new ',curr_id.get,debug(curr_data.get));
      | warning("napřed je třeba menu uložit do tabulky")
      }}
      item { title:'odstraň menu' proc onclick() { 
        curr_id.set(a.tree_remove(curr_id.get)) 
      }}
    }
    proc select_curr() {
      a.tree_select(curr_id.get);
    }
    proc menu() { var obj: object
      obj.set(ask('menu_tree',web.get));
      this.tree_show(obj,'tree') 
    }
    // dat=node.data tzn. vše z tx_gnmenu
    proc tree_onclick(fid,id,dat,com,x,txt,txts) { var i:text
      u.init; 
      { dat; 
        curr_id.set(fid); curr_data.set(dat);
        copy_by_name(dat,u);
      | u.enable(0)
      }
    }
  }
  form _u [,,400,400] { css:'popup-right'
    label save_info [5,130,578,]  
    button [10,10,,] { title:"[fa-play]", help:"zobraz 2 úrovně menu"
      proc onclick() { a.tree_expand(2); 
    }}
    button [30,10,,] { title:"[fa-forward]", help:"zobraz všechny úrovně menu"
      proc onclick() { a.tree_expand(99); 
    }}
    button [60,10,,] { title:"[fa-database] Ulož do tabulky"                             skill:'a|m'
      proc onclick() {
        save_info.set(ask('menu_save',web.get,a.tree_dump));
        u.plain;
        a.menu;
        p.refresh;
    }}
    button [178,10,,] { title:"[fa-undo] Zpět"                                           skill:'a|m'
      proc onclick() {
        a.menu;
        p.refresh
    }}
    button [238,10,,] { title:"[fa-undo] Vrať předchozí menu"                            skill:'a|m'
      proc onclick() {
        ask('menu_undo',web.get);
        a.menu;
        p.refresh
    }}
    field mid [5,164,35,] { title:"^mid" }
    field mid_top [49,164,35,] { title:"^top" }
    field mid_sub [94,164,35,] { title:"^sub" }
    field typ [153,164,22,17] { title:"^typ" help:'0=top 1=hlavní 2=podmenu'}
    field rank [186,164,22,17] { title:"^order" help:'pořadí v nadřízeném menu'}
    field level [218,164,22,17] { title:"^level" help:'8=mrop' }
    field redakce [252,164,22,17] { title:"^redakce" help:'0=každý 1=programátor 2=testér 4=redakce'}
    field ref [6,203,79,] { title:"^ref" help:'objeví se v url'}
    field nazev [97,203,146,] { title:"^název" help:'objeví se v menu'}
//    field title [256,203,127,] { title:"^title" }
    edit elem [5,242,378,60] { title:"^definice obsahu" }
    proc onchanged(elem) {
      echo(elem.id); a.curr_data.set(elem.get,elem.id); elem.plain;
    }
  }
}
# ----------------------------------------------------------------------------==> ADMIN
panel ADMIN [0,0,600,465] { title:'Aktivita CMS', type:'popup', css:'dialog_menu', 
    style:"min-width:590px", _sys:'adm'
  proc onfirstfocus() { m.a.d.click }
  menu m { type:'left', format:'f'
    menu a { title:'Aktivní redaktoři', type:'group', skill:'s'
      item d { title:'dnes'             par:°{s:'uzivatele',c:'dnes',short:'1'}}
      item { title:'včera'              par:°{s:'uzivatele',c:'vcera',short:'1'}}
      item { title:'týden'              par:°{s:'uzivatele',c:'dny',days:'8',short:'1'}}
      item { title:'dva týdny'          par:°{s:'uzivatele',c:'dny',days:'15',short:'1'}}
      item { title:'měsíc'              par:°{s:'uzivatele',c:'dny',days:'30',short:'1'}}
      item { title:'nastavený den'      par:°{s:'uzivatele',c:'den',short:'1'}}
    }
    menu c { title:'Přihlášení - chlapi',type:'group', skill:'a'
      item c { title:'chybná přihlášení'    par:°{cmd:'me_login',typ:'ko'}}
      item   { title:'správná přihlášení'   par:°{cmd:'me_login',typ:'ok'}}
      item   { title:'přihlášení k editaci' par:°{cmd:'me_login',typ:'r'}}
      proc onclick (i) {  var y:text
        panel.display(2,'mu'); u.den.display(0);
        y.set(ask('log_report',i.par));
        u.fill(conc(i.owner.title,' - ',replace_fa(i.title)),y);
      }
    }
    menu err { title:'Chyby', type:'group', skill:'a'
      item today { title:'dnes'         par:°{s:'chyby',c:'dnes'}}
      item { title:'včera'              par:°{s:'chyby',c:'vcera'}}
      item { title:'týden'              par:°{s:'chyby',c:'tyden'}}
      item { title:'měsíc'              par:°{s:'chyby',c:'mesic'}}
      item { title:'nastavený den'      par:°{s:'chyby',c:'den'}}
      item { title:'všechna hlášení'    par:°{s:'chyby',c:'vsechny'}}
      item { title:'čekající BUGs'      par:°{s:'chyby',c:'BUG1'}}
      item { title:'vyřešené BUGs'      par:°{s:'chyby',c:'BUG2'}}
    }
    menu { title:'Import a záloha databáze',type:'group',skill:'m'
      item { title:"[fa-question] přehled záloh"                par:°{typ:'download'}}
      item { title:"[fa-upload] zálohuj teď"                    par:°{typ:'special'}}
      item { title:"[fa-download] obnova ze zálohy (jen local)" par:°{typ:'restore'}}
      proc onclick(i) {
        panel.display(2,'mu'); u.den.display(0);
        u.fill(conc(i.owner.title,' - ',i.title),' ');
        { eq(i.par.typ,'download'); 
          u.append("<i>zobrazené zálohy lze stáhnout kliknutím (nelze 'Stahnout jako ...')</i><br>");
          u.append(ask('sys_backup_make',i.par)) 
        | eq(i.par.typ,'special'); u.append(ask('sys_backup_make',i.par)) 
        | eq(i.par.typ,'restore'); 
          [ confirm('Opravdu mám lokální databázi přepsat tou, kterou teď vybereš? 
                  Máš ji uschovanou? Po výběru se již rozběhne proces obnovy ...'); 
            // načti obnovu
            u.append(ask('sys_backup_make',i.par));
          ]
        }
      }
    }
    menu { title:'GitHub',type:'group',skill:'m'
      item { title:'[fa-question] CMS: git status'  par:°{folder:'cms',op:'cmd',cmd:'status'}}
      item { title:'[fa-gear] CMS: git log'         par:°{folder:'cms',op:'cmd',cmd:'log'}}
      item { title:'[fa-gear] CMS: git pull'        par:°{folder:'cms',op:'cmd',cmd:'pull'}}
      item { title:'[fa-gear] CMS: git fetch ...'   help:"po fetch>git reset --hard origin/master"
                                                    par:°{folder:'cms',op:'cmd',cmd:'fetch'}}
      item { title:'[fa-question] Ezer: git status' par:°{folder:'ezer',op:'cmd',cmd:'status'}}
      item { title:'[fa-gears] Ezer: git log'       par:°{folder:'ezer',op:'cmd',cmd:'log'}}
      item { title:'[fa-gears] Ezer: git pull'      par:°{folder:'ezer',op:'cmd',cmd:'pull'}}
      item { title:'[fa-gears] Ezer: git fetch ...' help:"po fetch>git reset --hard origin/master"
                                                    par:°{folder:'ezer',op:'cmd',cmd:'fetch'}}
      func onclick (i) {  
        panel.display(2,'mu'); u.den.display(0);
        u.fill(`${i.owner.title} - ${replace_fa(i.title)}`,php.git_make(i.par));
      }
    }
    func onclick (i) {  var y:text
      panel.display(2,'mu'); 
      u.den.display(i.par.c=='den');
      y= php.sys_activity(i.par,skip,u.den,sys('options','watch_access_opt'));
      u.fill(`${i.owner.title} - ${replace_fa(i.title)}`,y);
    }
  }
  use u: form _u [0,0,,] { tag:'mu' }
  var skip=0
  proc the_formsave (f,b) {
    f.same
  | f.key; f.save; { b.browse_seek; f.load | f.init }
  | f.insert; f.load;
    b.raise('onrowclick',b.browse_seek(conc(f.id_key,'=',f.key)))
  }
  # --------------------------------------------- u
  # formulář pro levostranné menu s textem
  form _u [,,*,*] { css:'popup-right'
    label result [5,0,*,*] { title:'', style:'overflow:auto' }
    field den [-4,4,85,18] { type:'date', style:'z-index:2', format:'Rrt' }
    label head [0,0,*,30]  { title:'' }
    label note [0,30,*,440] { title:'' style:'overflow:auto' }
    proc Init() { head.set(''); note.set(''); }
    proc fill(x,y) {
      [ x; head.set(conc("<div class='karta'>",replace_fa(x),"</div>")) ];
      [ y; note.set(y) ]
    }
    proc append(x) {
      note.set(conc(note.get,x)) 
    }
    proc shift(x) {
      note.set(conc(x,note.get)) 
    }
  }
}
# ----------------------------------------------------------------------------==> REDAKCE
panel REDAKCE [0,0,840,515] {type:'popup', title:'Redakce', css:'dialog_menu', 
    /*style:"min-width:830px",*/ skill:'a|a', _sys:'red'

  const sys_users_list = 22
  const sys_users_skills = 16
  const sys_users_cmd = 476
  const news = 264

  var last_par: object,
  var novy: number,
  var new_skill: text,
  var sel: text,

  use info: form _info [0,0,,]              { tag:'i' }
  use glob: form _glob [0,0,,]              { tag:'g' }
  use uzivatele: form users [0,0,,]         { tag:'u' }
  use uzivatel: form user [335,0,,]         { tag:'u' }
  use cmd: form _cmd [0,sys_users_cmd,,]    { tag:'u' }
  use dskill: form desc_skills [335,120,,]  { tag:'u' }

  proc onfirstfocus() {
    watch_css;
    last_par.set(see.all.actives.par);
    sel.set('use');
    refresh;
    uzivatel.get.display(sys('options','watch_access'),'ac');
    uzivatel.get.display(sys('options','watch_ip'),'ip');
    cmd.watch_key.display(sys('options','watch_key'));
    see.o.d.click;
  }
  # ==> ... uložení uživatele s kontrolou
  proc u_uloz () { var idu:number
    uzivatel.same;
  | uzivatel.kdo.set(sys('user','id_user')); uzivatel.kdo.change; uzivatel.kdy.set(now_sql(1));
    uzivatel.kdy.change;
    uzivatel.key;
    { u_test(uzivatel.key)
    | uzivatel.save; uzivatel.load;
      uzivatele.lst.browse_seek;
      cmd.get.enable(0,'c|z');
    }
  | not(uzivatel.key);
    p.form_obligatory_test(uzivatel.get);
    alert("ještě nejsou vyplněny všechny povinné údaje (žluté)")
  | not(uzivatel.key);
    { u_test(0)
    | // vytvoření uživatele - musí platit id_user=ezer_db2.id_osoba
      p.form_obligatory(uzivatel.get,0);
      idu.set(prompt(
            "pro správnou funkci emailového přihlašování je třeba vyplnit ID osoby z Answeru",0));
      idu;
      uzivatel.id_user.set(idu); uzivatel.id_user.change;
      uzivatel.insert; novy.set(uzivatel.key); uzivatel.load;
      uzivatele.lst.browse_load; uzivatele.lst.raise('onrowclick',novy.get);
      cmd.get.enable(0,'c|z');
    }
  }
  # test položek před uložením
  var msg:text
  proc u_test(id) {
    sys('options','watch_access');
    msg.set(ask('sys_user_access',sys('options','watch_access'),uzivatel.org.key,uzivatel.access.key));
    msg.get; alert(msg.get); return(1)
  | msg.set(ask('sys_user_unique',id,uzivatel.username.get,uzivatel.znacka.get));
    msg.get; alert(msg.get); return(1)
  | // testy prošly - uprav změny pro uložení
    [ uzivatel.access.changed; uzivatel.access.set(uzivatel.access.key); uzivatel.access.change ];
    [ uzivatel.org.changed; uzivatel.org.set(uzivatel.org.key); uzivatel.org.change ];
    [ uzivatel.password.changed; msg.set(ask('sys_hash_password', uzivatel.password.get)); uzivatel.password.set(msg.get); uzivatel.password.change ];
    return(0)
  }
  # obnovení seznamu uživatelů
  proc refresh() { var see_access:text
    see_access.set(cconc(sys('options','watch_access_opt'),conc(" AND access&",sys('user','access')),""));
    uzivatele.lst.browse_load(conc(last_par.get('cond'),see_access));
    cmd.enable(1,last_par.get('on'));
    cmd.enable(0,last_par.get('off'));
    watch_css;
  }
  # kompozice obarvení z Ezer.options.watch_access_opt.css (je-li)
  proc watch_css() { var opt:object
    sys('options','watch_access_opt');
    opt.set(ask('sys_user_watch_css',sys('options','watch_access_opt')));
    uzivatele.lst.zkratka.set_attrib('css_cell',replace(opt.css_cell,'@','org'));
    uzivatele.lst.username.set_attrib('css_cell',replace(opt.css_cell,'@','access'));
    uzivatel.org.selects(opt.sel_org);
    uzivatel.access.selects(opt.sel_access);
  }
  # ----------------------------------------------------------------==> ... menu
  menu see { type:'left', active:*, format:'f-'
    menu n {title:'Úpravy vzhledu webu',type:'group'
      item z {title:'Zobrazené části ',      par:°{cmd:'obsah',days:1} }
      proc onclick(i) { var cs:number
        panel.display(2,'g'); 
        cs.set(ask('select',"cms_skill","xclanek",conc("id_xclanek=",news.get)));
        [ cs; glob.novinky.set(0) | glob.novinky.set(1) ];
      }
    }
    menu o {title:'Přehled změn na webu',type:'group'
      item d {title:'Přehled změn dnes',      par:°{cmd:'obsah',days:1} }
      item   {title:'Přehled změn za týden',  par:°{cmd:'obsah',days:7} }
      item   {title:'Přehled změn za měsíc',  par:°{cmd:'obsah',days:30} }
      item   {title:'Přehled změn za rok',    par:°{cmd:'obsah',days:365} }
      item   {title:'Přehled uskutečněných změn', par:°{cmd:'obsah',days:99999} }
      func onclick(i) {
        panel.display(2,'i'); 
        info.fill(conc(i.owner.title,' - ',replace_fa(i.title)),ask('log_report',i.par));
      }
    }
    menu all { title:'Členové redakce',type:'group'
      item actives { title:'[fa-user-plus] aktivní uživatelé', par:°{on:'h',off:'u',cond:"LEFT(deleted,1)!='H'"}}
      item         { title:'[fa-user-times] skrytí uživatelé', par:°{on:'u',off:'h',cond:"deleted LIKE 'H%'"}}
      item         { title:'[fa-user] všichni uživatelé',      par:°{on:'h|u',off:'',cond:1}}
      proc onclick (i) {
        panel.display(2,'u');
        last_par.set(i.par);
        refresh;
      }
    }
  }
  # ----------------------------------------------------------------==> ... globální nastavení
  form _glob [,,835,473] { 
    label [6,3,300,15] { title:'<h1>Globální nastavení</h1>' }
    check novinky [10,37,300,20] { title:"zobrazit 'Novinky na tomto webu'" format:'t'
      proc onchange() { 
        this.get; 
        ask('query',conc("UPDATE xclanek SET cms_skill=0 WHERE id_xclanek=",news.get))
      | ask('query',conc("UPDATE xclanek SET cms_skill=4 WHERE id_xclanek=",news.get))
    }}
  }
  # ----------------------------------------------------------------==> ... uživatelé
  form users [,,835,473] { css:'ae_work'
    view u: table _user
//    view t: table _track { join_type:'NONE', join:"ON abbr=kdo" }
    label [6,3,89,15] { title:'<h1>Uživatelé</h1>' }
    browse lst [10,37,0,54] { rows:sys_users_list, qry_rows:1, buf_rows:100, group_by:'abbr'
      show user [,,37,] { title:'č.', help:'jednoznačné číslo uživatele',
        data:u.id_user, format:'rsq=' }
      show zkratka [,,25,] { title:'značka', help:'jednoznačná třípísmenná zkratka',
        data:u.abbr, format:'sq*', css_cell:'' }
      show username [,,63,] { title:'uživatel', help:'jednoznačné přihlašovací jméno',
        data:u.username, format:'sq*' }
      show prijmeni [,,60,] { title:'příjmení', data:u.surname, format:'s+q*' }
      show jmeno [,,50,] { title:'jméno', data:u.forename, format:'sq*' }
      show org [,,0,] { title:'org.', data:u.org, format:'rtsq*' }
      show access [,,0,] { title:'přístup', data:u.access, format:'rtsq*' }
      show skills [,,50,] { title:'oprávnění', help:'seznam kódů funkčních oprávnění',
        data:u.skills, format:'utsq*'
        proc onsubmit() { this.save } }
      proc onrowclick () {
        new_skill.set('');
        cmd.get.enable(0,'c');
        uzivatel.load(user.get);
        uzivatel.org.key(org.get);
        uzivatel.access.key(access.get);
        uzivatel.znacka.enable(0);
        // zobrazení v seznamu vlastností jako vybraných
        dskill.missing.set(ask('sys_skills_test',uzivatel.skills.get));
        dskill.seznam.selected('set',ask('sys_skills2ids',uzivatel.skills.get));
        dskill.seznam.selected(sel.get);
        dskill.seznam.browse_load;
      }
    }
  }
  # ----------------------------------------------------------------==> ... user
  form user [,,433,125] { style:"z-index:2"
    view u: table _user,
    label [5,6,89,15] { title:'<h1>Uživatel</h1>' }
    field id_user { data:u.id_user }
    field skills [2,46,146,] { data:u.skills, format:'n' }
    field username [5,48,59,] { data:u.username title:'^username' par:°{obligatory:1}}
    field password [80,48,42,] { data:u.password title:'^heslo', format:'d' }
    field znacka [139,48,38,] { data:u.abbr title:'^zkratka' par:°{obligatory:1}}
    label [197,43,90,47] { title:'ID musí být stejné jako v ezer_db2' format:'c' }
    button [213,92,,] { type:'html' title:'změnit ID' 
//      func onclick() { var id:number
//        id= prompt2("napiš ID z ezer_db2._user");
//        if ( id ) {
//          ask('query',conc("UPDATE _user SET id_user=",id," WHERE id_user=",uzivatele.lst.user));
//          refresh
//        }
//      }
      proc onclick() { var id:number
        id.set(prompt2("napiš ID z ezer_db2._user"));
        id;
        ask('query',conc("UPDATE _user SET id_user=",id," WHERE id_user=",uzivatele.lst.user.get));
        refresh
      }
    }
    select org [168,48,66,] { tag:'ac', data:u.org, format:'w', title:'^organizace' }
    select access [242,48,44,] { tag:'ac', data:u.access, format:'w', title:'^přístup k' }
    field prijmeni [5,92,98,] { data:u.surname title:'^příjmení' par:°{obligatory:1}}
    field jmeno [117,92,64,] { data:u.forename title:'^jméno' par:°{obligatory:1}}
    edit ips [298,47,127,64] { tag:'ip', data:u.ips, title:'^povolené IP adresy' }
    field login { data:u.login }
    field kdo { data:u.zmena_kdo }
    field kdy { data:u.zmena_kdy }
    proc onchanged() { cmd.get.enable(1,'c|z') }
  }
  # ----------------------------------------------------------------==> ... desc_skills
  form desc_skills [,,433,351] { 
    label [2,3,100,15] { title:'oprávnění' }
    label missing [60,3,360,15]
    browse seznam [2,20,180,198] { rows:sys_users_skills, qry_rows:1, buf_rows:100
      show id { data:_skill.id_skill }
      show abb [,,50,] { data:_skill.skill_abbr, title:'kód', format:'utsq*', skill:'a|m'
        proc onsubmit() { this.save } }
      show dsc [,,200,] { data:_skill.skill_desc, title:'popis oprávnění', format:'uts+q$', skill:'a|m'
        proc onsubmit() { this.save } }
      # ----------------------------------------------==> ... kontext.menu
      menu { type:'context'
//        item { title:'zobrazit roční aktivitu'
//          proc onclick() { uzivatele.lst.track(1) } }
        item { title:'odebrat všechna oprávnění'
          proc onclick() { seznam.selected("clear"); cmd.enable(1,'c'); } }
        item { title:'-přidat nový řádek', skill:'m|m'
          proc onclick() {
            eq(sel.get,'ignore');
            seznam.browse_seek(conc('id_skill=',
              _skill.insert_record(
                object('skill_abbr',conc(abb.get,'?'),'skill_desc',conc(dsc.get,'.?')))));
          | confirm('Pro přidávání musí seznam opravnění zobrazovat všechny položky. Přepnout?');
            seznam.selected("ignore"); sel.set('ignore'); seznam.browse_load
        } }
        item { title:'odebrat běžný řádek', skill:'m|m'
          proc onclick() { confirm('opravdu odebrat oprávnění ',abb.get,':',dsc.get,'?');
            _skill.delete_record(conc('id_skill=',id.get));
            seznam.browse_load } }
        item { title:'-zobrazit vybrané'
          proc onclick() { seznam.selected("use"); sel.set('use'); seznam.browse_load } }
        item { title:'zobrazit vše'
          proc onclick() { seznam.selected("ignore"); sel.set('ignore'); seznam.browse_load } }
        item { title:'-zkontrolovat konzistentnost'
          proc onclick() { alert(ask('sys_user_skills')) } }
        item { title:'exportovat přehledovou tabulku'
          proc onclick() { ask('sys_user_skills','skills');
            alert("soubor lze stáhnout <a href='docs/skills.xlsx'>zde</a>"); } }
        item { title:'nositelé nastaveného oprávnění'
          proc onclick() {
            uzivatele.lst.selected('clear');
            uzivatele.lst.selected('set',ask('sys_user_skilled',abb.get))
          } }
        item { title:'-zobrazit user.options'
          proc onclick() { alert(ask('sys_user_options',uzivatele.lst.user.get)) } }
//        item { title:'-zobrazit historii změn'
//          proc onclick() { Track.back_show('_user',uzivatele.lst.user.get) } }
      }
      proc onchoice() {
#         // pokud je přihlášený administrátor, zablokujeme mu možnost změnit si oprávnění
#         eq(uzivatele.lst.user.get,sys('user','id_user'));
#         contains(uzivatele.lst.user.get,sys('ezer','options','admins'));
#         warning('Administrátor si nemůže měnit svoje práva');
#       |
        uzivatel.skills.set(ask('sys_ids2skills',this.selected('get')));
        uzivatel.skills.change;
        cmd.get.enable(1,'c|z');
      }
    }
  }
  # ----------------------------------------------------------------==> ... cmd
  form _cmd [,,852,39] { 
    # -------------------------------- úpravy uživatelů
    label  [0,6,361,30] { css:'ae_parm' }
    button [11,12,,] { tag:'h',type:'html', title:'[fa-plug fa-rotate-180 fa-red] Skrýt' skill:'a|m'
      proc onclick() { confirm("Opravdu znemožnit přihlášení uživateli ",uzivatel.username.get,'?');
        alert(ask('sys_user_hide',uzivatele.lst.user.get,1)); refresh
    }}
    button [71,12,,] { tag:'u', type:'html', title:'[fa-plug] Obnovit'                   skill:'a|m'
      proc onclick() { confirm("Opravdu obnovit uživatele ",uzivatel.username.get,'?');
        alert(ask('sys_user_hide',uzivatele.lst.user.get,0)); refresh
    }}
    button watch_key [195,12,,] { title:'Vygenerovat klíč', format:'n'                   skill:'a|m' 
      proc onclick() {
        confirm("Vygenerování nového klíče znemožní přístup současným uživatelům. Pokračovat?");
        watch_ref.set(ask('sys_watch_key'))
      }
    }
    label watch_ref [316,15,250,15]
    # -------------------------------- změny uživatele
    label  [436,6,292,30] { css:'ae_parm' }
    button [449,12,,] { tag:'c', type:'html', title:'[fa-save] Uložit'                   skill:'a|m'
      proc onclick () { u_uloz
    } }
    button [515,12,,] { tag:'z', type:'html', title:'[fa-undo] Zpět'                     skill:'a|m'
      proc onclick () {
        p.form_obligatory(uzivatel.get,0);
        uzivatele.lst.browse_key; uzivatel.load(uzivatele.lst.browse_key);
        cmd.get.enable(0,'c|z');
    } }
    button [651,12,,] { type:'html', title:'[fa-heart] Vytvořit'                         skill:'a|m'
      proc onclick () {
        cmd.get.enable(0,'c'); cmd.get.enable(1,'z');
        dskill.seznam.selected('clear');
        uzivatele.lst.blur; uzivatel.init; uzivatel.kdo.set(sys('user','id_user'));
        uzivatel.kdy.set(now);
        uzivatel.znacka.enable(1);
        p.form_obligatory(uzivatel.get,1);
    } }
  }
  # --------------------------------------------- u
  # formulář pro levostranné menu s textem
  form _info [,,*,*] { css:'popup-right'
    label result [5,0,*,*] { title:'', style:'overflow:auto' }
    label head [0,0,*,30]  { title:'' }
    label note [0,30,*,440] { title:'' style:'overflow:auto' }
    proc Init() { head.set(''); note.set(''); }
    proc fill(x,y) {
      [ x; head.set(conc("<div class='karta'>",replace_fa(x),"</div>")) ];
      [ y; note.set(y) ]
    }
    proc append(x) {
      note.set(conc(note.get,x)) 
    }
    proc shift(x) {
      note.set(conc(x,note.get)) 
    }
  }
}
# ----------------------------------------------------------------------------==> OPTIONS
panel OPTIONS [0,0,220,220] { title:'Volby zobrazení pro redakci', type:'popup'
  use g: form _g [0,10,,]
  proc onfocus() { start }
  proc start() { var level:number
    g.init;
    level.set(ask('session','web,level'));
    [ gt(level,1); g.af.set(1) ];
    [ gt(level,0); g.ai.set(1) ];
    level.set(ask('session','man,level'));
    [ bitand(level,4); g.ar.set(1) | g.ar.enable(0) ];
    [ bitand(level,2); g.at.set(1) | g.at.enable(0) ];
    [ bitand(level,1); g.am.set(1) | g.am.enable(0) ];
  }
  form _g [,,200,120] {
    label [0,0,200,80] { css:'ae_work' }
    # KLIENT
    label [10,10,200,] { title:"<b>vidět obsah jako pro</b>", style:"color:black" }
    check ai [10,30,200,] { title:'iniciovaného', format:'t' proc onchange() {
      upd('web,level',1,this.get); } }
    check af [10,50,200,] { title:'učastníka firmingu', format:'t' proc onchange() {
      upd('web,level',2,this.get); } }
    # REDAKCE
    label [0,100,200,80] { css:'ae_work' }
    label [10,110,200,] { title:"<b>zviditelnit co je pouze pro</b>", style:"color:black" }
    check ar [10,130,70,] { title:'redaktora', css:'redakce4', format:'t' proc onchange() {
      upd('man,level',4,this.get); } }
    check at [90,130,90,] { title:'testera', css:'redakce2', format:'t' proc onchange() {
      upd('man,level',2,this.get); } }
    check am [90,156,90,] { title:'programátora', css:'redakce1', format:'t' proc onchange() {
      upd('man,level',1,this.get); } }
    # reset
    button [85,190,,] { title:'reset', proc onclick () {
      ask('session','web,level',ask('session','web,level0')); 
      ask('session','man,level',ask('session','man,level0')); 
      start; p.refresh }}
  }
  proc bitand(x,y) {
    return(function('x','y',"return Number(x) & Number(y);",x,y))
  }
  proc upd(co,kolik,add) { var old:number
    old.set(ask('session',co));
    ask('session',co,cconc(add,sum(old,kolik),minus(old,kolik)));
    p.refresh;  
  }
}
# ==============================================================================> EDITOR
panel EDITOR [0,0,720,550] { type:'popup', style:"min-width:700px", par:°{close:'no'}, _sys:'edi'
  var id:number,
      path:text
  use a: form _a [2,0,,] { tag:'a', format:'n' }  // akce
  use c: form _c [2,0,,] { tag:'c', format:'n' }  // článek
  use b: form _b [2,0,,] { tag:'b', format:'n' }  // kniha 
  use k: form _k [2,0,,] { tag:'k', format:'n' }  // kalendář
  proc Kalendar(_key) {
    id.set(_key);
    panel.display(2,'k'); 
    [ _key; k.load(_key) | k.init ];
    panel.set_attrib('title','Úprava položky kalendáře');
    path.set(conc('/inc/c/',_key));                  // cesta pro přílohy
    ask('session','man,inc_path',path.get);
    panel.modal(10,40) 
  }
  proc Kniha(_key) { var lock:object
  [ b.load(_key); 
    id.set(_key);
    not(or(contains(sys('user','id_user'),b.id_editors.get),has_skill('s')));
    alert("tuto knihu může opravovat jen ",cconc(b.editors.get,b.editors.get,'šéfredaktor'))
  | panel.display(2,'b'); 
    lock.set(ask('record_lock','xkniha',_key)); // selže, pokud již je editováno
    not(lock.kdo);
    panel.set_attrib('title','Úprava knihy');
    panel.modal(10,40) 
  | lock.kdo;
    alert("knihu právě upravuje redaktor ",lock.kdo)
  ]}
  func Clanek(_key) { var lock:object
    c.load(_key); 
    id= _key;
    if ( contains(sys('user','id_user'),c.id_editors) || has_skill('s') ) {
      panel.display(2,'c'); 
      lock= php.record_lock('xclanek',_key);  // zjistí, zda je editováno
      if (lock.kdo) 
        alert("článek právě upravuje redaktor ",lock.kdo)
      else {
        path= `/inc/c/${_key}`;               // cesta pro přílohy
        php.session('man,inc_path',path);
        join_drop(c.obsah);
        panel.title= 'Úprava článku';
        panel.modal(10,40) 
      }
    }
    else 
      alert(`tento článek může opravovat jen ${c.editors?c.editors:'šéfredaktor'}`)
  }
//  proc Clanek(_key) { var lock:object
//  [ c.load(_key); 
//    id.set(_key);
//    not(or(contains(sys('user','id_user'),c.id_editors.get),has_skill('s')));
//    alert("tento článek může opravovat jen ",cconc(c.editors.get,c.editors.get,'šéfredaktor'))
//  | panel.display(2,'c'); 
//    lock.set(ask('record_lock','xclanek',_key)); // selže, pokud již je editováno
//    not(lock.kdo);
//    path.set(conc('/inc/c/',_key));                  // cesta pro přílohy
//    ask('session','man,inc_path',path.get);
//    join_drop(c.obsah);
//    panel.set_attrib('title','Úprava článku');
//    panel.modal(10,40) 
//  | lock.kdo;
//    alert("článek právě upravuje redaktor ",lock.kdo)
//  ]}
  proc Akce(_idc,_ida) { var me:number, lock:object // idc je id_xclanek, idk je id_xakce
  [ a.xa.load(_ida); a.xc.load(_idc);
    me.set(sys('user','id_user'));
    not(or(contains(me,a.id_editors.get),has_skill('s')));
    alert("tuto akci může opravovat jen ",cconc(a.editors.get,a.editors.get,'šéfredaktor'))
  | panel.display(2,'a'); 
    lock.set(ask('record_lock','xclanek',_idc)); // selže, pokud již je editováno
    eq(lock.idu,0,me); // smím opravit?
    path.set(conc('/inc/c/',_idc));                  // cesta pro přílohy
    ask('session','man,inc_path',path.get);
    join_drop(a.obsah);
    panel.set_attrib('title','Úprava akce');
    panel.modal(10,40) 
  | lock.kdo;
    alert("akci právě upravuje redaktor ",lock.kdo)
  ]}
  proc join_drop(obsah) {
    UPLOAD.ckeditor.set(obsah);
    UPLOAD.path.set(path.get);
    UPLOAD.g.drop.Init;
    [ function('edit','drop',"edit.label_drop=drop; return 1;",obsah,UPLOAD.g.drop) ]
  }
  # -----------------------------------------------------------------------------==> edit kalendář
  # úprava kalendáře
  form _k [10,10,710,460] {
    button [0,5,,]  { title:"[fa-chevron-left]", help:'starší akce'
      proc onclick() { next_xakce(1); }}
    button [21,5,,] { title:"[fa-repeat]"          
      proc onclick() { form.load(id.get); next_xakce(0) } }
    button [43,5,,] { title:"[fa-chevron-right]", help:'novější akce'
      proc onclick() { next_xakce(-1); }}
    field [68,5,50,] { data:xakce.id_xakce, format:'o' }
    label [120,7,400,] { title:"<== nalezni akci, kterou chceš upravit nebo založ novou ==>", 
        format:'c', style:"font-weight:bold;color:darkgreen;background-color:#c0e2c2" }
    button  [-99,5,,] { title:'Nová akce', help:'vytvořit novou akci'
      proc onclick() { form.init; }}
    button  [-46,5,,] { title:'Uložit', help:'ukončit editor a uložit změny'
      proc onclick() { 
        form.same
      | form.key; form.save; form.load; 
        ask('log_obsah','u','a',id.get); 
        panel.hide(1); 
      | id.set(form.insert); form.load; 
        ask('log_obsah','i','a',id.get); 
        panel.hide(1); 
      }}
    button  [-1,5,,] { title:'Zpět', help:'ukončit editor bez uložení změn'
      proc onclick() { panel.hide(0); }}
    button [-1,40,,] { title:'[fa-files-o] Přílohy', help:'seznam souborů sdružených s textem'
      proc onclick() {
        UPLOAD.ckeditor.set(obsah);
        UPLOAD.path.set(path.get);
        UPLOAD.modal //(50,100)
      }
    }
    // položky akce
    field [0,40,85,] { type:'date', title:'^ode dne', data:xakce.datum_od }
    field [95,40,85,] { type:'date', title:'^do dne', data:xakce.datum_do }
    field [190,40,248,] { title:'^název', data:xakce.nazev }
    field [450,40,183,] { title:'^místo', data:xakce.misto }
    // anotace
    label [0,70,300,20] { title:'anotace s odkazem na pozvánku' }
    edit obsah [0,90,710,150] { type:'html', data:xakce.web_text, par:°{toolbar:'WEB'} }
    // informace
    label info [0,265,710,40] 
    // zápis
    label text [0,287,710,263] { style:"background:white;overflow-y:scroll" }
    // funkce
    proc next_xakce(smer) { var y:object
      info.set(''); text.set('');
      y.set(ask('next_xakce',id.get,smer)); 
      [ y.info; info.set(y.info) ]; 
      [ y.text; text.set(y.text) ]; 
      [ y.msg; warning(y.msg) ];
      id.set(y.id); form.load(y.id);
      [ y.dotaz; confirm(y.dotaz); ask('zapis_xakce',id.get) ];
    }
  }
  # -----------------------------------------------------------------------------==> edit akce
  # úprava akce
  form _a [10,10,715,460] {
    view xa: table xakce
    view xc: table xclanek
    field ida { data:xa.id_xakce }
    field idc { data:xc.id_xclanek }
    field id_editors { data:xc.editors }
    button [-42,5,,] { title:'Uložit', help:'ukončit editor a uložit změny'
      proc onclick() { 
        [ xa.save; xa.load ]; 
        [ xc.save; xc.load ]; 
        ask('record_unlock','xclanek',idc.get);
        ask('log_obsah','u','c',idc.get); 
        panel.hide(1); 
      }}
    button [-1,5,,] { title:'Zpět', help:'ukončit editor bez uložení změn'
      proc onclick() { panel.hide(0); }}
    button [-89,5,,] { title:'[fa-files-o] Přílohy', help:'seznam souborů sdružených s textem'
      proc onclick() {
        UPLOAD.ckeditor.set(obsah);
        UPLOAD.path.set(path.get);
        UPLOAD.modal //(50,100)
      }
    }
    // položky akce
    field [0,40,85,] { type:'date', title:'^ode dne', data:xa.datum_od }
    field [95,40,85,] { type:'date', title:'^do dne', data:xa.datum_do }
    field [190,40,268,] { title:'^název', data:xa.nazev }
    field [470,40,140,] { title:'^místo', data:xa.misto }
    select [620,40,80,] { type:'map', title:'^pouze pro', help:'pro všechny nebo jen pro místní skupinu'
        options:cis_skupiny.zkratka, value:'0', data:xa.skupina }
    // autoři a oprávnění
    select editors [46,5,150,] { type:'map+', title:'napsal', help:'+ kdo může text měnit'
        options:users.username, value:'0', data:xc.editors }
    select  [231,5,100,] { type:'map', title:'uvidí', help:'zobrazí se jen pro ...'
        options:cis_web.zkratka, value:'0', data:xc.web_skill }
    select  [388,5,100,] { type:'map', title:'omezení', help:'zobrazí se jen pro ...'
        options:cis_cms.zkratka, value:'0', data:xc.cms_skill }
    // text
    edit obsah [0,70,710,450] { type:'html', data:xc.web_text, par:°{toolbar:'WEB'} }
  }
  # -----------------------------------------------------------------------------==> edit clanek    
  # oprava textu článku
  form _c [10,10,710,460] {
    field id_editors { data:xclanek.editors }
    edit ch_date [-170,1,47,29] { format:'o' value:'31.12.2018' css:'edit_ch' data:xclanek.ch_date 
      help:'datum poslední podstatné změny textu (lze ovládat tlačítky)' }
    button [-196,15,17,17] { title:'[fa-exclamation-triangle]' css:'button_ch' 
      help:'dnes došlo k podstatné změně'
      proc onclick() {
        ch_date.set(now); ch_date.change;
    }}
    button [-180,15,17,17] { title:'[fa-close]' css:'button_ch' 
      help:'zrušení data podstatné změny'
      proc onclick() {
        ch_date.set(''); ch_date.change
    }}
    button  [-121,5,,] { title:'Uložit', help:'ukončit editor a uložit změny'
      func onclick() { var _y:object
        _y= php.bez_embeded(0,0,obsah);
        if ( _y.n ) 
          alert(_y.msg) 
        else {
          if ( ch_date.changed() ) {
            php.log_path('xclanek',id,1); // zápis ch_date do menu.ch_date
          }
          form.save(); 
          php.record_unlock('xclanek',id);
          php.log_obsah('u','c',id); 
          panel.hide(1); 
        }}}
//      proc onclick() { var _y:object
//        _y.set(ask('bez_embeded',0,0,obsah.get));
//        _y.n; alert(_y.msg) 
//      | [ ch_date.changed; ask('log_path','xclanek',id.get,1) ]; // zápis ch_date do menu.ch_date
//        form.save; 
//        ask('record_unlock','xclanek',id.get);
//        ask('log_obsah','u','c',id.get); 
//        panel.hide(1); }}
    button  [-75,5,,] { title:'Zpět', help:'ukončit editor bez uložení změn'
      func onclick() { 
        php.record_unlock('xclanek',id);  
        panel.hide(0); }
//      proc onclick() { 
//        ask('record_unlock','xclanek',id.get);  
//        panel.hide(0); }
    }
    button app [-3,4,,] { title:'[fa-files-o] Přílohy', help:'seznam souborů sdružených s textem'
      proc onclick() {
        UPLOAD.ckeditor.set(obsah);
        UPLOAD.path.set(path.get);
        UPLOAD.modal //(50,100)
      }
    }
    // autoři a oprávnění
    select editors [40,5,150,] { type:'map+', title:'napsal', help:'+ kdo může text měnit'
        options:users.username, value:'0', data:xclanek.editors }
    select  [225,5,100,] { type:'map', title:'uvidí', help:'zobrazí se jen pro ...'
        options:cis_web.zkratka, value:'0', data:xclanek.web_skill }
    select  [382,5,100,] { type:'map', title:'omezení', help:'zobrazí se jen pro ...'
        options:cis_cms.zkratka, value:'0', data:xclanek.cms_skill }
    // text
    edit obsah [0,40,712,480] { type:'html', data:xclanek.web_text, par:°{toolbar:'WEB'} }
  }
  # -----------------------------------------------------------------------------==> edit kniha
  # oprava nadpisu knihy
  form _b [10,10,710,90] {
    field id_editors { data:xkniha.editors }
    button  [-121,5,,] { title:'Uložit', help:'ukončit editor a uložit změny'
      proc onclick() { 
        form.save; 
        ask('record_unlock','xkniha',id.get);
        ask('log_obsah','u','b',id.get); 
        panel.hide(1); }}
    button  [-75,5,,] { title:'Zpět', help:'ukončit editor bez uložení změn'
      proc onclick() { 
        ask('record_unlock','xkniha',id.get);  
        panel.hide(0); }}
    select editors [-334,5,150,] { type:'map+', title:'text napsal', help:'+ kdo může text měnit'
        options:users.username, value:'0', data:xkniha.editors }
    select  [-171,5,100,] { type:'map', title:'text uvidí', help:'zobrazí se jen pro ...'
        options:skill_level.skill_name, value:'0', data:xkniha.web_skill }
    field [0,40,300,] { data:xkniha.nazev }
  }
}
# ----------------------------------------------------------------------------==> UPLOAD
panel UPLOAD [0,0,400,130] { title:' Nahrát soubor', type:'popup', style:"min-width:390px", 
    css:'dialog', _sys:'upl'
  var ckeditor:object,
      path:text
  use g: form _g [10,0,,]
  proc onfocus() {
    g.drop.loaded
  }
  form _g [,,400,100] {
    label dlab [0,10,380,] {tag:'l_', title:'... použij [init] ' }
    label drop [0,27,380,100] {tag:'l_', type:'drop', 
        par:°{contextmenu:"-vložit obrázek;vložit odkaz"}
      proc ondrop(f) {                                                // možnost odmítnutí přenosu
        //gt(f.size,5242880); warning('odmítnuto ',f.name,' má více jak 5MB'); return(0)
        echo('dropped=',f.name);                                      // jméno nemusí být ASCII
        return(f.name);
      }
      proc onload(f) { echo("loaded=",f.name) } // po dokončení přenosu, jméno bude ASCII
      proc onerror(e) { // funkce onerror nesmí obsahovat asynchronní kód a lokální proměnné
        echo("drop error=",e.msg); return(1) // vrácení 0 způsobí standardní hlášení chyby
      }
      proc onmenu(op,name,ref) { var name2:text
        eq(op,'remove'); echo(ask('drop_unlink',path.get,name,'S:')); loaded
      | eq(op,'rename'); [
          name2.set(prompt2("zadej nové jméno pro ",name)); 
          name2;
          echo(ask('drop_rename',path.get,name,name2,'S:')); loaded
        ]
      | eq(op,'remove-all'); echo(ask('drop_unlink',path.get,'*','S:')); loaded
      | eq(op,'-vložit obrázek');
        { not(ckeditor.get); warning("to lze jen v prostředí otevřeného editoru");
        | [ function('t','n',
              "t.ckeditor.insertHtml('<img src=\"'+n+'\"/>');",
              ckeditor.get,conc(path.get,'/',name)) ];
        }
      | eq(op,'vložit odkaz');
        { not(ckeditor.get); warning("to lze jen v prostředí otevřeného editoru");
        | function('t',"return t.ckeditor.getSelection().getSelectedText();",ckeditor.get);
          [ function('t','n',
              "t.ckeditor.insertHtml('<a target=\"doc\" href=\"'+n+'\">'
               +t.ckeditor.getSelection().getNative()+'</a>');",
              ckeditor.get,conc(path.get,'/',name)) ];
          panel.hide(1)
        | panel.hide(0);
          alert("pro vložení odkazu na soubor je třeba napřed označit text, na který se má klikat")
        }
      }
      proc Init() { drop.init(path.get,'S:'); }
      proc loaded() {
        Init;
        dlab.set(conc('soubory pro článek (',path.get,')'));
        echo('lsdir=',drop.lsdir)
      }
    }
    button [-14,2,,] { title:"[fa-cloud-download] Vložit soubor odkazem"
      proc onclick() { var url:text, ret:object
        url.set(UPLOAD_URL.modal);
        url; ret.set(ask('upload_url',url,EDITOR.id.get));
        ret.err; alert(ret.err)
      | url; g.drop.loaded
    }}
  }
  panel UPLOAD_URL [,,300,60] { type:'popup' title:'zadej url s přílohou', style:"min-width:300px" 
    use ff:form _ff
    proc onfocus() { ff.zip.init; ff.zip.focus }
    form _ff {
      field zip [0,0,300,] { format:'t' }
      button [0,30,,] { title:"[fa-save] Přidej přílohu"
        proc onclick() { panel.hide(zip.get) } }
      button [100,30,,] { title:"[fa-undo] Zpět"
        proc onclick() { panel.hide(0) } }
    }
  }
}
# ----------------------------------------------------------------------------==> FOTKY
# organizer fotek
panel FOTKY [0,0,680,265] { title:' Organizér fotek', type:'popup', css:'dialog'
  use f: form _foto [0,0,,]
  # zapamatování informací do DOM pro
  proc onfocus() {
    function('panel',"panel.DOM_Block.id='FOTKY';",panel);
  }
//  # ==> . nový
  proc novy(_cid) { // var ret:object
    f.init; f.fid.set(0); f.cid.set(_cid); f.fotky.set('');
    f.display(0,'o'); f.display(1,'n'); f.sav.set('[fa-save] Vytvořit');
    f.editors.key(sys('user','id_user')); f.editors.change;
    f.autor.set(conc(sys('user','forename'),' ',sys('user','surname'))); f.autor.change;
    f.psano.set(now); f.psano.change;
//    f.drop_init;
    panel.modal //(10,30);
  }
  # ==> . oprava
  proc oprava(_fid) {
    f.init;
    f.display(1,'o');
    f.fid.set(_fid); f.sav.set('[fa-save] Uložit');
    refresh;
    panel.modal; //(10,30);
  }
  proc refresh() { var ret:object
    ret.set(ask('load_fotky',f.fid.get)); copy_by_name(ret,f); 
    // smí přihlášený redaktor měnit?
    not(or(contains(sys('user','id_user'),f.editors.key),has_skill('s')));
    alert("tyto fotky může upravovat jen ",cconc(f.editors.get,f.editors.get,'šéfredaktor'));
    return(0)
  |
    //    [ function("foto_sortable('start');") ];
    //    f.drop_init;
    f.drop.init(conc("inc/f/",f.fid.get,"/"));
  }
//  proc create() { var values:object 
//    values.set(object());
//    f.sav.set('[fa-save] Uložit');
//    copy_by_name(f,values); f.fid.set(ask('create_fotky',values));
//    f.display(1,'o');
//    f.plain
//  }
//  # ==> . vymazání
//  proc smazat(name) {
//    ask('delete_fotky',f.fid.get,name); refresh;
//  }
//  # ==> . vtipná poznámka
//  proc poznamka(name,note0) { var note:text
//    note.set(prompt2('připoj krátkou poznámku k fotografii',note0));
//    echo('note=',note);
//    ask('note_fotky',f.fid.get,name,note); refresh;
//  }
  # ==> . form
  form _foto {
    field fid // id_xfotky
    field cid // id_xclanek
    select editors [146,40,150,] { type:'map+', title:'fotky přidal(i): ', help:'a mohou je měnit'
        options:users.username, value:'0' }
    field autor  [35,15,100,]  { tag:'o,n', title:'^autor:' }
    field nadpis [146,15,224,] { tag:'o,n', title:'^název:' }
    field psano  [380,15,85,]  { tag:'o,n', type:'date', title:'^psáno:', format:'r' }
    label        [0,72,80,80]  { tag:'o', css:'drop_back' }
//    label drop   [0,42,,]      { tag:'o', css:'drop_foto' }
    label fotky  [0,70,690,205] { tag:'o', style:'overflow:auto' }
    # ==> .. tlačítka
    button full [0,15,,] { tag:'o', title:"[fa-expand]",
      proc onclick() { var w:number,h:number
        w.set(sys('screen','width')); h.set(sys('screen','height'));
        panel.property(object('left',0,'top',25,'width',minus(w,50),'height',minus(h,80)));
        fotky.property(object('width',minus(w,45),'height',minus(h,110)));
    } }
    button sav [-78,15,,] { tag:'o,n', title:'[fa-save] Vytvořit', help:'ukončit organizaci fotek'
      proc onclick() { var values:object, order:text
        values.set(object());
//        order.set(function("return foto_sortable('order');"));
        copy_by_name(f,values);
        { fid.get; ask('save_fotky',values,order); panel.hide(fid.get);
        | not(fid.get); //create
          f.fid.set(ask('create_fotky',values));
          f.sav.set('[fa-save] Uložit'); f.display(1,'o'); 
          refresh; p.refresh
        };
      }
    }
    button [-20,15,,] { tag:'o,n', title:'[fa-undo] Zpět', help:'ukončit editor bez vytvoření článku'
      proc onclick() { UPLOAD.hide(0); panel.hide(0); }
    }
    button [410,40,,] { tag:'o', title:"[fa-file-archive-o] ZIP", format:'d'
      proc onclick() { var zip:text, ret:object
        zip.set(ZIP_URL.modal);
        ret.set(ask('upload_zip',zip,fid.get));
        ret.err; alert(ret.err)
      | refresh
    } }
//    button [-188,9,,] { tag:'o', title:"[fa-check-square-o]",
//      proc onclick() { var pid:number, order:text
//        pid.set(prompt("Zadej part.uid kam se mají přesunout označené fotky"));
//        eq(pid,uid.get); warning("POZOR cílový článek se musí lišit od tohoto")
//      | pid;
//        order.set(function("return foto_sortable('checked');"));
//        ask('move_fotky',uid.get,pid,order);
//        refresh
//    } }
    button [380,40,,] { tag:'o', title:"[fa-sort-alpha-asc]", format:'d'
      proc onclick() { ask('sort_fotky',fid.get); refresh }
    }
    button [460,40,,] { title:'[fa-camera-retro] Oprav fotky',
      proc onclick() { clear; echo(ask('corr_fotky',fid.get)); refresh }}
//    # ==> .. drag & drop
//    proc ondrop(fileinfo) { var name: text
//      [ not(fid.get); create ];--
//      drop.set_css('','drop_area drop_area_hover');
//      name.set(ask('upload_fotky',fileinfo,fid.get));
//      drop.set_css('','drop_area drop_area_hover drop_area_run');
//      refresh;
//    }
//    proc drop_init() {
//      drop.set_css('drop_area','');
//      drop.set("<span>místo pro novou fotku</span>");
//      form.file_drop(drop,°{css_hover:'drop_area_hover',css_run:'drop_area_run',handler:'ondrop',
//        max_width:1200,max_height:960});
//    }
    label drop   [0,72,80,80]      { type:'drop', tag:'o', css:'drop_foto', format:'t' 
      proc ondrop(x) { //var name: text
//        [ not(fid.get); create ];--
        drop.set_css('','drop_area drop_area_hover');
//        name.set(ask('upload_fotky',fileinfo,fid.get));
//        ask('upload_fotky',fileinfo,fid.get);
//        drop.set_css('','drop_area drop_area_hover drop_area_run');
//        refresh;
//        return(name)
//        gt(x.size,5242880); warning('odmítnuto ',x.name,' má více jak 5MB'); return(0)
//      | 
        return(x.name)
      }
      proc onload(x) { // po dokončení přenosu, jméno bude ASCII
        ask("minify_fotky",x.name,f.fid.get);
        refresh; p.refresh;
      } 
      proc onerror(e) { // funkce onerror nesmí obsahovat asynchronní kód a lokální proměnné, ale přes call lze zavolat už cokoliv
        warning(e.msg); return(1) // vrácení 0 způsobí standardní hlášení chyby
      }
      proc onprogress(n,msg) { 
        echo("drop ",n," ",msg);
      }
    }
  }
  panel ZIP_URL [,,300,60] { type:'popup' title:'zadej url ZIPu s fotografiemi' use ff:form _ff
    proc onfocus() { ff.zip.init }
    form _ff {
      field zip [0,0,300,] { format:'t' }
      button [0,30,,] { title:"[fa-camera-retro] Přidej fotky"
        proc onclick() { panel.hide(zip.get) } }
      button [100,30,,] { title:"[fa-undo] Zpět"
        proc onclick() { panel.hide(0) } }
    }
  }
}
# ----------------------------------------------------------------------------==> TABLE
# organizer tabulky účastníků akce
panel TABLE [0,0,500,240] { title:' Organizér tabulky účastníků akce', type:'popup', css:'dialog'
  use f: form _tab [0,0,,]
  var nova:number       // 1 = nová tabulka
  # ==> . nový
  proc novy(_cid) { var ret:object
    nova.set(1); f.init; f.skupina.init; f.display(2,'n'); f.cid.set(_cid); 
    f.pridej.onclick;
    panel.modal
  }
  # ==> . oprava
  proc oprava(_cid) { var ret:object
    nova.set(0); f.init; f.skupina.init; f.display(2,'n'); f.cid.set(_cid);
    ret.set(ask('table_load',_cid));
    [ ret.ok; foreach(ret.rows,read_row); panel.modal ];
    [ not(ret.ok); alert(ret.msg) ];
  }
  proc read_row(row) { var i:number
    i.set(f.skupina.add);
    f.skupina.part(i).part('nazev').set(row.nazev);
    f.skupina.part(i).part('stary').set(row.nazev);
    f.skupina.part(i).part('maxim').set(row.maxim);
    f.skupina.part(i).part('pocet').set(row.pocet);
  }
  # ==> . form
  # tag: n=vytvoření, o=oprava názvů a maxim
  form _tab {
    field cid
    # ==> .. přidání skupin
    button pridej [10,9,,] { tag:'n', title:'přidat skupinu ...', proc onclick() { var last:number
      last.set(skupina.add);
      skupina.part(last.get).part('nazev').init(1);
      skupina.part(last.get).part('maxim').init(1);
      skupina.part(last.get).part('pocet').init(1);
    } }
    label [160,20,100,] { title:'název skupiny' }
    label [270,20,50,] { title:'maximum' }
    label [330,20,50,] { title:'přihlášeno' }
    list skupina [150,30,255,220] { tag:'n', rows:22
      field nazev [10,4,100,] { tag:'n', format:'t', value:'' }
      field maxim [120,4,50,] { tag:'n', format:'tr', value:'10' }
      field pocet [180,4,50,] { tag:'n', format:'tdr' }
      field stary // starý název
    }
    label [10,30,140,220] { title:'odebrat skupinu lze zapsáním maximum=0' }
    # ==> .. tlačítka
    button sav [-78,0,,] { title:'[fa-save] Uložit', help:'vytvořit tabulku'
      proc onclick() { var ret:object, values:object
        values.set(object()); copy_by_name(skupina,values);
        { nova.get; ret.set(ask('table_create',cid.get,values))
        | ret.set(ask('table_change',cid.get,values))
        };
        p.refresh;
        alert(ret.msg);
        panel.hide(0);
    }}
    button [-20,0,,] { title:'[fa-undo] Zpět', help:'ukončit bez vytvoření tabulky'
      proc onclick() { panel.hide(0); } }
  }
}
# ----------------------------------------------------------------------------==> tabulky
table menu { key_id:'mid', db:'setkani'
  number mid { key:'primary' }
  number mid_top 
  number mid_sub
  number redakce 
  number level   
  number typ     
  number rank    
  text ref       
  text nazev
  date cr_date
  date ch_date
}
table xakce { key_id:'id_xakce', db:'setkani'
  number id_xakce { key:'primary' }
  text nazev
  text misto
  number skupina
  date datum_od { sql_pipe:'sql_date1' }
  date datum_do { sql_pipe:'sql_date1' }
  number web_stav
  text web_menu
  text web_text
}
table xkniha { key_id:'id_xkniha', db:'setkani'
  number id_xkniha { key:'primary' }
  text editors
  number web_skill
  text nazev
}
table xclanek { key_id:'id_xclanek', db:'setkani'
  number id_xclanek { key:'primary' }
  text editors
  number web_skill
  number cms_skill
  text web_text
  date ch_date  { sql_pipe:'sql_date1' } // datum podstatné změny
}
table _help {  key_id:'id_help'                     // tabulka _help je v databázi aplikace
  number id_help { key:'primary' }
  text kind, number version, date datum { sql_pipe:'sql_date1' },
  text topic, text name, text seen, text help, number work
}
table _user { key_id:'id_user', db:'ezer_system'
  number id_user
  text deleted,
  text abbr,
  text skills  { help:'seznam procedurálních oprávnění' }
  text org     { help:'příslušnost k organizaci' } // 2**n
  text access  { help:'povolený přístup k datům organizací' }  // součet povolených org
  text ips     { help:'čárkami oddělený seznam IP adres ze kterých se uživatel smí přihlásit' }
  text options { help:'privátní nastavení|ve formátu JSON' }
  text username,
  text password,
  number state,
  text forename,
  text surname,
  text login,
  text history,
  text sess_id,
  text sess_time,
  text sess_data,
  number zmena_kdo,
  date zmena_kdy {  }
}
table _skill { key_id:'id_skill', db:'ezer_system'
  number id_skill
  text skill_abbr
  text skill_desc
}
table _cis { key_id:'id_cis'
  number id_cis text druh, text data, text zkratka, number poradi,
  text hodnota, text popis, text barva, text ikona
}
//table _track { key_id:'id_track'
//  number id_track { key:'primary' }
//  date kdy { help:'datum změny' }
//  text kdo { help:'pachatel' }
//  text kde { help:'tabulka' }
//  number klic { help:'klíč' }
//  text fld { help:'položka' }
//  text op { help:'operace' }
//  text old { help:'původní hodnota' }
//  text val { help:'původní hodnota' }
//}
table _cis { key_id:'id_cis'
  number id_cis
  text druh,
  text data,
  text zkratka,
  number poradi,
  text hodnota,
  text popis,
  text barva,
  text ikona
}
map skill_level: table _skill { where:"id_skill IN (0,8,16)", order:'id_skill', key_id:'id_skill' }
map cis_web: table _cis { where:"druh='web'", order:'poradi', key_id:'data' }
map cis_cms: table _cis { where:"druh='cms'", order:'poradi', key_id:'data' }
map cis_skupiny: table _cis { where:"druh='skupiny'", order:'poradi', key_id:'data' }
map users: table _user { where:"1", order:'surname', key_id:'id_user' }


